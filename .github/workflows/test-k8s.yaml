name: "E2E k8s testing"

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main
      - feature/*
      - chore/*
      - fix/*
      - refactor/*

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level' 
        type: choice
        options:
        - info
        - warning
        - debug 
        default: debug
        required: false

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      run: ${{ steps.filter.outputs.run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          # TODO: Once poc validated, add:
          # - '.github/workflows/test-k8s.yaml'
          filters: |
            run:
              - 'main.go'
              - 'go.*'
              - '**/*.go'
              - '**/*.html'
              - 'tests/*'
              - 'tools/*'
              - 'Dockerfile'
              - 'manifests/dev'
              - 'manifests/testing-namespace'
      
      # https://github.community/t/feature-request-conditional-required-checks/16761/28
      - name: Update GH commit status
        if: (github.event_name == 'pull_request' && steps.filter.outputs.run != 'true')
        env:
          # Required for gh api call
          GITHUB_TOKEN: "${{ github.token }}"
        run: |
          gh api "/repos/{owner}/{repo}/statuses/${{ github.event.pull_request.head.sha }}" \
            -f context="E2E k8s testing / build-image" \
            -f state="success"
          gh api "/repos/{owner}/{repo}/statuses/${{ github.event.pull_request.head.sha }}" \
            -f context="E2E k8s testing / test-e2e" \
            -f state="success"

  build-image:
    needs: changes
    if: needs.changes.outputs.run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "BUILD_DATE=$(date +'%Y-%m-%d_%H:%M:%ST%Z')" >> $GITHUB_ENV

      - name: Extract metadata from Git and GitHub for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: BuildDocker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: false
          load: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          outputs: type=docker,dest=/tmp/kube-ns-suspender_oci.tar
          build-args: |
            VERSION=${{ steps.meta.outputs.tags }}
            BUILD_DATE=${{ env.BUILD_DATE }}

      - name: Upload container image
        uses: actions/upload-artifact@v2
        with:
          name: kube-ns-suspender_oci
          path: /tmp/kube-ns-suspender_oci.tar
          retention-days: 2

  test-e2e:
    needs:
      - changes
      - build-image
    if: needs.changes.outputs.run == 'true'
    runs-on: ubuntu-latest
    steps:
      # Needed to get config and tests
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: kube-ns-suspender_oci
          path: /tmp

      - name: Load image into docker
        run: |
          docker load --input /tmp/kube-ns-suspender_oci.tar
          docker image ls -a

      - uses: engineerd/setup-kind@v0.5.0
        with :
          version: "v0.11.1"
          config: "./tests/config/kind-config.yaml"

      - name: Load image into kind
        run: |
          kind load docker-image ghcr.io/govirtuo/kube-ns-suspender:latest

      - name: Setup Testing
        run: ./tests/scripts/setup.sh

      # TODO: Try to use the Makefile targets
      - name: Testing
        run: time bats ./tests/

      - name: Collect logs
        if: ${{ always() }}
        run: |
          echo "---> DETIK logs"
          cp -va /tmp/detik tmp/
          cat tmp/*.log tmp/*.debug
          echo "---> KIND logs"
          mkdir -vp tmp/kind
          kind export logs tmp/kind/

      - name: Archive test logs
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: tests-logs
          path: tmp/
          retention-days: 5

  publish-image:
    needs:
      - changes
      - test-e2e
    if: (needs.changes.outputs.run == 'true' && github.event_name != 'pull_request')
    runs-on: ubuntu-latest
    # Permissions for the Built-in, auto-loaded secrets.GITHUB_TOKEN
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: kube-ns-suspender_oci
          path: /tmp

      - name: Load image into docker
        run: |
          docker load --input /tmp/kube-ns-suspender_oci.tar
          docker image ls -a

      - name: Extract metadata from Git and GitHub for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Get current date
        id: date
        run: echo "BUILD_DATE=$(date +'%Y-%m-%d_%H:%M:%ST%Z')" >> $GITHUB_ENV

      # Build time should not be increased with this workflow because internal cache for linux/amd64 will be used from previous jobs step
      # on Build and push step.
      - name: Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
              VERSION=${{ steps.meta.outputs.tags }}
              BUILD_DATE=${{ env.BUILD_DATE }}
